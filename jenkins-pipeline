pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        DOCKERHUB_USERNAME = 'oussmamajour'
    }

    stages {
        stage('Pull') {
            steps {
                echo 'Cloning repository...'
                git url: 'https://github.com/OussamaMahjour/SocialMediaPlatform.git'
            }
        }

        stage('Test') {
            steps {
                dir('SocialMedia/services') {
                    script {
                        def services = sh(script: "ls -d */", returnStdout: true).trim().split("\n")
                        for (service in services) {
                            def servicePath = service.replaceAll("/", "")
                            if (fileExists("${servicePath}/pom.xml")) {
                                echo "Running tests for ${servicePath}..."
                                sh "cd ${servicePath} && mvn test"
                            } else {
                                echo "Skipping ${servicePath}: No pom.xml found."
                            }
                        }
                    }
                }
            }
        }

        stage('Package') {
            steps {
                dir('SocialMedia/services') {
                    script {
                        def services = sh(script: "ls -d */", returnStdout: true).trim().split("\n")
                        for (service in services) {
                            def servicePath = service.replaceAll("/", "")
                            if (fileExists("${servicePath}/pom.xml")) {
                                echo "Packaging ${servicePath}..."
                                sh "cd ${servicePath} && mvn clean package"
                            } else {
                                echo "Skipping ${servicePath}: No pom.xml found."
                            }
                        }
                    }
                }
            }
        }

        stage('Delivery') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        sh """
                            docker compose build
                            docker compose push
                        """
                    }
                }
            }
        }
    }
}
