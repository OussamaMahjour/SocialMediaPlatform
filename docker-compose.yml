services:
    
    gateway:
        container_name: gateway
        build:
            context: services/gateway
            dockerfile: ../../docker/java/Dockerfile
        ports:
            - "8080:8080"
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
            interval: 15s
            retries: 6
        depends_on:
            - discovery
    
    discovery:
        container_name: discovery
        build:
            context: services/discovery
            dockerfile: ../../docker/java/Dockerfile
        ports:
            - "8761:8761"
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8761/health" ]
            interval: 15s
            retries: 6
    
    chat-service:
        container_name: chat-service
        build:
            context: services/chat-service
            dockerfile: ../../docker/java/Dockerfile
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
        ports:
            - "8085:8080"
        depends_on:
            - gateway
            - chat-db
    
    chat-db:
        image: mongo:7.0.5
        container_name: chat-db
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
        volumes:
            - ./storage/chat/db:/data/db
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
            MONGO_INITDB_DATABASE: chat
        ports:
            - "27020:27017"

    notification-service:
        container_name: notification-service
        build:
            context: services/notification-service
            dockerfile: ../../docker/java/Dockerfile
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
        ports:
            - "8086:8080"
        depends_on:
            - gateway
            - notification-db

    notification-db:
        image: mongo:7.0.5
        container_name: notification-db
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
        volumes:
            - ./storage/notification/db:/data/db
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
            MONGO_INITDB_DATABASE: notification
        ports:
            - "27021:27017"
    
    user-service:
        container_name: user-service
        build:
            context: services/user-service
            dockerfile: ../../docker/java/Dockerfile
        ports:
            - "8083:8080"
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
            interval: 15s
            retries: 6
        environment:
            - DISCOVERY_SERVICE_URL=http://discovery-service:8080/eureka
            - CONFIG_SERVICE_URL=http://config-service:8080
        depends_on:
            - gateway
            - user-db
    
    auth-service:
        container_name: auth-service
        build:
            context: services/auth-service
            dockerfile: ../../docker/java/Dockerfile
        ports:
            - "8082:8080"
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
            interval: 15s
            retries: 6
        depends_on:
            - auth-db
            - user-service
    
    auth-db:
        container_name: auth-db
        image: mysql:8.0
        volumes:
            - ./storage/auth-db:/var/lib/mysql
        restart: always
        environment:
            MYSQL_PASSWORD: root
            MYSQL_USER: mysql
            MYSQL_DATABASE: auth_db
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
            - "3308:3306"
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
    
    user-db:
        container_name: user-db
        image: mysql:8.0
        volumes:
            - ./storage/user-db:/var/lib/mysql
        restart: always
        environment:
            MYSQL_PASSWORD: root
            MYSQL_USER: mysql
            MYSQL_DATABASE: user_service_db
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
            - "3307:3306"
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
    
    frontend:
        build:
            context: UI
            target: development
            dockerfile: ../docker/react/Dockerfile
        ports:
            - 3000:3000
        volumes:
            - ./UI/src:/code/src
            - /UI/node_modules
        expose:
            - 3306
            - 33060
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
    
    media-service:
        container_name: media-service
        build:
            context: services/media-service
            dockerfile: ../../docker/java/Dockerfile
        volumes:
            -   ./storage/media/storage:/media
        ports:
            - "8888:8888"
        depends_on:
            -   minio
            - media-db
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
    
    media-db:
        image: mongo:7.0.5
        container_name: media-db
        volumes:
            - ./storage/media/db:/data/db
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
            MONGO_INITDB_DATABASE: media
        ports:
            - "27022:27017"
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
    
    minio:
        image: minio/minio:RELEASE.2023-06-29T05-12-28Z.fips
        container_name: minio
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - ./storage/media/minio:/data
        environment:
            MINIO_ROOT_USER: admin1234
            MINIO_ROOT_PASSWORD: admin1234
            MINIO_MINIMUM_DRIVE_FREE: 1%

        command: server --console-address ":9001" /data
        deploy:
            resources:
                limits:
                    cpus: '0.2'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 256M
